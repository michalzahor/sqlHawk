#
# see http://schemaspy.sourceforge.net/dbtypes.html
# for configuration / customization details
#

# note that MySQL tables must be of type 'InnoDB' or they won't
# have foreign key relationships
description=MySQL

connectionSpec=jdbc:mysql://<host>/<database>
host=hostname[:port] host where database resides with optional port
database=database name

driver=com.mysql.jdbc.Driver

# Sample path to the MySQL drivers.
# Use --driver-path to override.
# The driver should be available at www.mysql.com/products/connector/j/
driverPath=/usr/share/java/mysql-connector-java.jar

# return table_schema, table_name, table_comment, table_rows 
#   for a specific :schema (which MySQL doesn't have, so the db name will be used)
#
# querying table_rows in this manner is significantly faster than the "select count(*)"
#   implementation, but will be a rough estimate for InnoDB-based tables
# have table_rows evaluate to null if an approximation isn't appropriate for your situation
selectTablesSql=select null as table_schema, table_name, table_comment, table_rows from information_schema.tables where table_schema=:schema and table_type='BASE TABLE'

# return view_schema, view_name, view_definition, view_comment
#   for a specific :schema (which MySQL doesn't have, so the db name will be used)
selectViewSql=select null as view_schema, table_name as view_name, view_definition, null as view_comment from information_schema.views where table_schema=:schema

# stored procedures
#selectStoredProcsSql=SELECT name, definition FROM #todo#;

upgradeLogTable=create table SqlHawk_UpgradeLog \
( \
	UpgradeId MEDIUMINT NOT NULL AUTO_INCREMENT, \
	UpgradeDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP, \
	Batch nvarchar(200), \
	ScriptPath nvarchar(400), \
	PRIMARY KEY (UpgradeId) \
) ;

upgradeLogInsert=INSERT INTO SqlHawk_UpgradeLog (Batch, ScriptPath) \
VALUES (?, ?);
